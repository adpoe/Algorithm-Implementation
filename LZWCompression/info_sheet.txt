========================================
CS/COE 1501 Assignment Information Sheet
----------------------------------------

You must submit an information sheet with every assignment.  Also be sure
to submit all materials following the procedures described on the
submission procedures page.

Name:  Anthony Poerio
       adp59@pitt.edu

Lecture section:  Mon/Weds, @9:30am

Recitation day and time:  Friday, @3:00pm

Assignment #:  Number 2 - LZW Compression

Program due date:  Friday, February 26, 2016

Handed in date:  Friday, February 26, 2016

Source code file name(s):
MyLZW.java --> This is the file I edited. It's a copy of the LZW.java (Sedgewick's version from the book), with my updates
to support: 1) Variable width codewords; 2) Resetting the codebook;  3) Monitor Mode.








Other file name(s) (if relevant):
Dependencies are:
- BinaryStdOut.java
- BinaryStdIn.java
- Queue.java
- StdIn.java
- StdOut.java
- TST.java






Does your program run without error?: No.

If not, what is/are the error(s) and which parts of your program run
correctly?:
All files compress correctly. And all files expand correctly, except in one instance: "all.tar" in Monitor mode does not expand fully.
But that is the only file which has an issue, and only in that one circumstance: Monitor mode.
My all.tar throws a null pointer exception in that instance.
I've tested all other files in all modes and they all compress as expected, and expand back to their initial format/size.
This was the only error I couldn't smoothly remedy.






Additional comments to the grader:
I know this isn't necessary, but I've also uploaded:
1)  My folders containing my results from testing both compression and expansion at each mode
2)  Shell scripts I used to automate different command line processes, batching things together. You can use them if you'd like.
Just makes things easier. The chief script to use would be "all.sh" to use it, just invoke it on the command line and pass in
the mode you'd like to use. The script will read that mode and compress and expand all the example files, then place them
in the appropriate folders for confirmation.

I've also upload my results file both in a .txt and .md format. The .md file can be viewed on GitHub and you'll be able to
see the columns align properly that way, it's all written in a valid Markdown table.

Thanks sincerely for your time,
tony






